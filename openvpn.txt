# Выполните команду для создания виртуальной машины 
gcloud compute instances create ovpn-server \
    --zone=asia-east1-b \
    --machine-type=e2-medium \
    --image-family=debian-11 \
    --image-project=debian-cloud \
    --tags=ovpn-server,http-server,https-server

# Прежде всего установим OpenVPN, подключитесь к VM и введите команду
sudo apt-get install openvpn

# Создадим папку keys в директории OpenVPN и скопируем туда все файлы с easy-rsa сервера
sudo mkdir /etc/openvpn/keys

# С помощью команды поменяйте владльца директории и фалов на свой
sudo chown $USER:$USER /etc/openvpn/keys/*

# У меня возникла проблема с прямым копированием в коносли gcloud, поэтому я сначала скопировал файлы на свой пк и оттуда обратно закачал в ovpn-server
# Скачивание на локальный пк
gcloud compute scp $YOURUSER@easy-rsa-server:/etc/openvpn/keys/ca.crt ~/ca.crt --zone=asia-east1-b
gcloud compute scp $YOURUSER@easy-rsa-server:/etc/openvpn/keys/dh.pem ~/dh.pem --zone=asia-east1-b
gcloud compute scp $YOURUSER@easy-rsa-server:/etc/openvpn/keys/ovpn-server.crt ~/ovpn-server.crt --zone=asia-east1-b
gcloud compute scp $YOURUSER@easy-rsa-server:/etc/openvpn/keys/ovpn-server.key ~/ovpn-server.key --zone=asia-east1-b

# Обратно закачиваем по той же схеме
# Если выйдет ошибка измени права на директорию 
gcloud compute scp ~/ca.crt $YOURUSER@ovpn-server:/etc/openvpn/keys/ca.crt --zone=asia-east1-b
gcloud compute scp ~/dh.pem $YOURUSER@ovpn-server:/etc/openvpn/keys/dh.pem --zone=asia-east1-b
gcloud compute scp ~/ovpn-server.crt $YOURUSER@ovpn-server:/etc/openvpn/keys/ovpn-server.crt --zone=asia-east1-b
gcloud compute scp ~/ovpn-server.key $YOURUSER@ovpn-server:/etc/openvpn/keys/ovpn-server.key --zone=asia-east1-b

# Можно проверить что все файлы действительно скопировались
sudo ls -l /etc/openvpn/keys/

# Cкопируем в директорию /etc/openvpn шаблон серверной конфигурации:
sudo cp /usr/share/doc/openvpn/examples/sample-config-files/server.conf /etc/openvpn

# Откроем файл /etc/openvpn/server.conf и внесем в него необходимые изменения, в большинстве случаев вам придется раскомментировать нужны строки или убедиться в их наличии:
port 1194
proto udp
dev tun
topology subnet
ca keys/ca.crt
cert keys/server.crt
key keys/server.key
dh keys/dh2048.pem
ifconfig-pool-persist /var/log/openvpn/ipp.txt
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 208.67.222.222"
push "dhcp-option DNS 208.67.220.220"
keepalive 10 120
#tls-auth ta.key 0
cipher AES-256-GCM
compress lz4-v2
push "compress lz4-v2"
user nobody
group nogroup
persist-key
persist-tun

# Прежде чем настраивать NAT нужно узнать название сетевого интрефейса командой
sudo vim /etc/sysctl.conf 
net.ipv4.ip_forward=1

# Создайте файл iptables.sh сделайте его исполняемым. Не забудьте узнать имя интерфеса с помощью команды ip a
eth=$1
proto=$2
port=$3
#OpenVPN
iptables -A INPUT -i "$eth" -m state --state NEW -p "$proto" --dport "$port" -j ACCEPT
#Allow TUN
iptables -A INPUT -i tun+ -j ACCEPT
#Allow TUN 
iptables -A FORWARD -i tun+ -j ACCEPT
iptables -A FORWARD -i tun+ -o "$eth" -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i "$eth" -o tun+ -m state --state RELATED,ESTABLISHED -j ACCEPT
#NAT
iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o "$eth" -j MASQUERADE
# Запустите его с параметрами 
ip a
sudo ./iptables.sh ens4 udp 1194



???????????????????
ip link show - в моем случае это ens4
# Создадим файл правил:
sudo vim /etc/nat
sudo sysctl -p
############################
#!/bin/sh

# Включаем форвардинг пакетов
echo 1 > /proc/sys/net/ipv4/ip_forward

# Сбрасываем настройки брандмауэра
iptables -F
iptables -X
iptables -t nat -F
iptables -t nat -X


# Разрешаем инициированные нами подключения извне
iptables -A INPUT -i ens4 -m state --state ESTABLISHED,RELATED -j ACCEPT

# Разрешаем подключения по SSH
iptables -A INPUT -i ens4 -p tcp --dport 22 -j ACCEPT

# Разрешаем подключения к OpenVPN
iptables -A INPUT -i ens4 -p udp --dport 1194 -j ACCEPT

#Запрещаем входящие извне
iptables -A INPUT -i ens4 -j DROP

# Разрешаем инициированные нами транзитные подключения извне
iptables -A FORWARD -i ens4 -o tun0 -m state --state ESTABLISHED,RELATED -j ACCEPT

# Запрещаем транзитный трафик извне
iptables -A FORWARD -i ens4 -o tun0 -j DROP

# Включаем маскарадинг для локальной сети
iptables -t nat -A POSTROUTING -o ens4 -s 10.8.0.0/24 -j MASQUERADE
###################################
sudo chmod +x /etc/nat

# Данный файл требуется запускать после создания туннельного интерфейса tun0, поэтому откроем конфигурационный файл сервера OpenVPN /etc/openvpn/server.conf и в его конце добавим опцию:


# Закройте все порты, кроме тех, что необходимы для работы VPN (например, 1194 для UDP). Включите только нужные правила в брандмауэре Google Cloud:
gcloud compute firewall-rules create allow-vpn-traffic \
  --direction=INGRESS \
  --priority=1000 \
  --network=default \
  --action=ALLOW \
  --rules=udp:1194 \
  --source-ranges=0.0.0.0/0 \
  --target-tags=allow-vpn-traffic

# Залогинитесь в новую vm 
gcloud compute ssh vpn-server --zone=asia-east1-b --project=PROJECT_ID

# Установите OpenVPN и необходимые зависимости:
sudo apt-get update
sudo apt-get install -y openvpn easy-rsa

# Настройка OpenVPN сервера
sudo apt-get install -y openvpn easy-rsa

# Настроим каталоги и создадим ключи
make-cadir /etc/openvpn/easy-rsa
# На этом этапе может возникнуть ошибка с правами на папку, испроавить можно командой 
sudo chmod -R 755 /etc/openvpn/easy-rsa/
cd /etc/openvpn/easy-rsa
sudo ./easyrsa init-pki
sudo ./easyrsa gen-req vpn-server nopass

# Передаем сертификат в наш сертификациооный центр
scp /etc/openvpn/easy-rsa/pki/reqs/vpn-server.req   murzabulatovberik@cert-center:/tmp/
